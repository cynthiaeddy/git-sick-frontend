{"version":3,"file":"static/webpack/static/development/pages/index.js.9352bfcbc99f28935c48.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nconst ALL_ITEMS_QUERY = gql`\n\tquery ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n\t\titems(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tprice\n\t\t\tdescription\n\t\t\timage\n\t\t\tlargeImage\n\t\t}\n\t}\n`;\nconst Center = styled.div`text-align: center;`;\nconst ItemsList = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr;\n\tgrid-gap: 60px;\n\tmax-width: ${(props) => props.theme.maxWidth};\n\tmargin: 0;\n`;\n\nclass Items extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Center>\n\t\t\t\t<Pagination page={this.props.page} />\n\t\t\t\t<Query\n\t\t\t\t\tquery={ALL_ITEMS_QUERY}\n\t\t\t\t\tvariables={{\n\t\t\t\t\t\tskip: 2,\n\t\t\t\t\t\tfirst: 4\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ data, error, loading }) => {\n\t\t\t\t\t\tif (loading) return <p>loading ...</p>;\n\t\t\t\t\t\tif (error) return <p>error: {error.message} </p>;\n\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\treturn <ItemsList>{data.items.map((item) => <Item item={item} key={item.id} />)}</ItemsList>;\n\t\t\t\t\t}}\n\t\t\t\t</Query>\n\t\t\t\t<Pagination />\n\t\t\t</Center>\n\t\t);\n\t}\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAvBA;AACA;AAyBA;;;;;A","sourceRoot":""}